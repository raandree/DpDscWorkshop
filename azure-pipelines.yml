trigger:
  branches:
    include:
    - '*'
  paths:
    exclude:
    - CHANGELOG.md
  tags:
    include:
    - "v*"
    exclude:
    - "*-*"

variables:
  buildFolderName: output
  testResultFolderName: testResults
  defaultBranch: main

stages:
  - stage: Build
    jobs:
      - job: Compile_Dsc
        strategy:
          parallel: 2
        displayName: 'Compile DSC Configuration'
        pool:
          vmImage: 'windows-2019'
        steps:
          - task: gitversion/setup@0
            displayName: 'Install GitTools'
            inputs:
              versionSpec: '5.3.x'
          - task: gitversion/execute@0
            name: gitVersion
            displayName: 'Evaluate Next Version'
            inputs:
              configFilePath: 'GitVersion.yml'

          - task: PowerShell@2
            name: displayEnvironmentVariables
            displayName: 'Display Environment Variables'
            inputs:
              targetType: 'inline'
              script: |
                dir -Path env: | Out-String | Write-Host

          - task: PowerShell@2
            displayName: 'Execute build.ps1'
            inputs:
              targetType: inline
              script: |
                $env:CurrentJobNumber = $env:SYSTEM_JOBPOSITIONINPHASE
                $env:TotalJobCount = $env:SYSTEM_TOTALJOBSINPHASE
                Write-Host "Calling 'Build.ps1' with parameter 'CurrentJobNumber' =  $($env:CurrentJobNumber) and 'TotalJobCount' = $($env:TotalJobCount)"
                .\Build.ps1 #-ResolveDependency

          - task: PublishTestResults@2
            condition: and(succeeded(), eq(variables['jobNumber'], '1'))
            displayName: 'Publish Integration Test Results'
            inputs:
              testResultsFormat: NUnit
              testResultsFiles: '**/IntegrationTestResults.xml'
              failTaskOnFailedTests: true

          - task: PublishBuildArtifacts@1
            displayName: MOF
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)\output\MOF'
              ArtifactName: MOF

          - task: PublishBuildArtifacts@1
            displayName: 'Meta MOF'
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)\output\MetaMOF'
              ArtifactName: 'Meta MOF'

          - task: PublishBuildArtifacts@1
            displayName: RSOP
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)\output\RSOP'
              ArtifactName: RSOP

          - task: PublishBuildArtifacts@1
            displayName: Rsop with Source Information
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)\output\RsopWithSource'
              ArtifactName: RsopWithSource

          - task: PublishBuildArtifacts@1
            condition: and(succeeded(), not(startsWith(variables['BHCommitMessage'], '--Added new node')), eq(variables['jobNumber'], '1'))
            displayName: 'Compressed Modules'
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)\output\CompressedModules'
              ArtifactName: 'Modules'

          - task: PublishTestResults@2
            displayName: 'Publish Build Acceptance Test Results'
            inputs:
              testResultsFormat: NUnit
              testResultsFiles: '**/AcceptanceTestResults.xml'
              failTaskOnFailedTests: true
